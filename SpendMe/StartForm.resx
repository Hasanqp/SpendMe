<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5P8BEDFsgUmuL/IAAAAASUVORK5CYII=
</value>
  </data>
</root>